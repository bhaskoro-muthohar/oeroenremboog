[theme]
base = "light"

[global]

# By default, Streamlit checks if the Python watchdog module is available
# and, if not, prints a warning asking for you to install it. The watchdog
# module is not required, but highly recommended. It improves Streamlit's
# ability to detect changes to files in your filesystem.

# If you'd like to turn off this warning, set this to True.

# Default: false
disableWatchdogWarning = false

# By default, Streamlit displays a warning when a user sets both a widget
# default value in the function defining the widget and a widget value via
# the widget's key in `st.session_state`.

# If you'd like to turn off this warning, set this to True.

# Default: false
disableWidgetStateDuplicationWarning = false

# If True, will show a warning when you run a Streamlit-enabled script
# via "python my_script.py".

# Default: true
showWarningOnDirectExecution = true

# DataFrame serialization.

# Acceptable values:
# - 'legacy' : Serialize DataFrames using Streamlit's custom format. Slow
#              but battle-tested.
# - 'arrow'  : Serialize DataFrames using Apache Arrow. Much faster and
#              versatile.

# Default: "arrow"
dataFrameSerialization = "arrow"

[logger]

# Level of logging: 'error', 'warning', 'info', or 'debug'.

# Default: 'info'
level = "info"

# String format for logging messages. If logger.datetimeFormat is set,
# logger messages will default to `%(asctime)s.%(msecs)03d %(message)s`. See
# Python's documentation for available attributes:
# https://docs.python.org/2.6/library/logging.html#formatter-objects

# Default: "%(asctime)s %(message)s"
messageFormat = "%(asctime)s %(message)s"

[client]

# Whether to enable st.cache. This does not affect st.cache_data or
# st.cache_resource.

# Default: true
caching = true

# If false, makes your Streamlit script not draw to a
# Streamlit app.

# Default: true
displayEnabled = true

# Controls whether uncaught app exceptions and deprecation warnings
# are displayed in the browser. By default, this is set to True and
# Streamlit displays app exceptions and associated tracebacks, and
# deprecation warnings, in the browser.

# If set to False, deprecation warnings and full exception messages
# will print to the console only. Exceptions will still display in the
# browser with a generic error message. For now, the exception type and
# traceback show in the browser also, but they will be removed in the
# future.

# Default: true
showErrorDetails = true

# Change the visibility of items in the toolbar, options menu,
# and settings dialog (top right of the app).

# Allowed values:
# * "auto"      : Show the developer options if the app is accessed through
#                 localhost or through Streamlit Community Cloud as a developer.
#                 Hide them otherwise.
# * "developer" : Show the developer options.
# * "viewer"    : Hide the developer options.
# * "minimal"   : Show only options set externally (e.g. through
#                 Streamlit Community Cloud) or through st.set_page_config.
#                 If there are no options left, hide the menu.

# Default: "auto"
toolbarMode = "minimal"

[runner]

# Allows you to type a variable or string by itself in a single line of
# Python code to write it to the app.

# Default: true
magicEnabled = true

# Install a Python tracer to allow you to stop or pause your script at
# any point and introspect it. As a side-effect, this slows down your
# script's execution.

# Default: false
installTracer = false

# Sets the MPLBACKEND environment variable to Agg inside Streamlit to
# prevent Python crashing.

# Default: true
fixMatplotlib = true

# Run the Python Garbage Collector after each script execution. This
# can help avoid excess memory use in Streamlit apps, but could
# introduce delay in rerunning the app script for high-memory-use
# applications.

# Default: true
postScriptGC = true

# Handle script rerun requests immediately, rather than waiting for script
# execution to reach a yield point. This makes Streamlit much more
# responsive to user interaction, but it can lead to race conditions in
# apps that mutate session_state data outside of explicit session_state
# assignment statements.

# Default: true
fastReruns = true

# Raise an exception after adding unserializable data to Session State.
# Some execution environments may require serializing all data in Session
# State, so it may be useful to detect incompatibility during development,
# or when the execution environment will stop supporting it in the future.

# Default: false
enforceSerializableSessionState = false